<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements. See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License. You may obtain a copy of the License at
  http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache.nifi</groupId>
        <artifactId>nifi-extension-bundles</artifactId>
        <version>{{ NIFI_VERSION }}</version>
    </parent>

    <groupId>tech.stackable.nifi</groupId>
    <artifactId>nifi-iceberg-bundle</artifactId>
    <version>0.0.3</version>
    <packaging>pom</packaging>

    <properties>
        <!--
        Iceberg 1.9.0 does not seem to be compatible with the Avro version of NiFi:
        The needed function was added in Avro 1.12.0 (https://github.com/apache/avro/commit/ff324530251ce4facc8e8c6f3c12a1f19081c5b1)
        NiFi 2.4.0 is on Avro 1.11.4
        See also https://github.com/apache/iceberg/pull/12455

        [INFO] Running tech.stackable.nifi.processors.iceberg.TestPutIcebergWithHiveCatalog
        [ERROR] Tests run: 3, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 7.821 s <<< FAILURE!  in tech.stackable.nifi.processors.iceberg.TestPutIcebergWithHiveCatalog
        [ERROR] tech.stackable.nifi.processors.iceberg.TestPutIcebergWithHiveCatalog.onTriggerIdentityPartitioned  Time elapsed: 1.101 s <<< FAILURE!
        java.lang.AssertionError: java.lang.NoSuchMethodError: 'org.apache.avro.LogicalTypes$TimestampNanos org.apache.avro.LogicalTypes.timestampNanos()'
                at org.apache.nifi.util.StandardProcessorTestRunner.run(StandardProcessorTestRunner.java:239)
                at org.apache.nifi.util.StandardProcessorTestRunner.run(StandardProcessorTestRunner.java:197)
                at org.apache.nifi.util.StandardProcessorTestRunner.run(StandardProcessorTestRunner.java:192)
                at org.apache.nifi.util.StandardProcessorTestRunner.run(StandardProcessorTestRunner.java:187)
                at org.apache.nifi.util.StandardProcessorTestRunner.run(StandardProcessorTestRunner.java:182)
                at tech.stackable.nifi.processors.iceberg.TestPutIcebergWithHiveCatalog.onTriggerIdentityPartitioned(TestPutIcebergWithHiveCatalog.java:106)
                at java.base/java.lang.reflect.Method.invoke(Method.java:580)
                at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
                at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
        Caused by: java.lang.NoSuchMethodError: 'org.apache.avro.LogicalTypes$TimestampNanos org.apache.avro.LogicalTypes.timestampNanos()'
                at org.apache.iceberg.avro.TypeToSchema.<clinit>(TypeToSchema.java:50)
                at org.apache.iceberg.avro.AvroSchemaUtil.convert(AvroSchemaUtil.java:76)
                at org.apache.iceberg.avro.AvroSchemaUtil.convert(AvroSchemaUtil.java:72)
                at org.apache.iceberg.PartitionData.partitionDataSchema(PartitionData.java:42)
                at org.apache.iceberg.PartitionData.<init>(PartitionData.java:71)
                at org.apache.iceberg.DataFiles.newPartitionData(DataFiles.java:39)
                at org.apache.iceberg.DataFiles$Builder.<init>(DataFiles.java:163)
                at org.apache.iceberg.DataFiles.builder(DataFiles.java:134)
                at org.apache.iceberg.io.DataWriter.close(DataWriter.java:84)
                at org.apache.iceberg.io.BaseTaskWriter$BaseRollingWriter.closeCurrent(BaseTaskWriter.java:345)
                at org.apache.iceberg.io.BaseTaskWriter$BaseRollingWriter.close(BaseTaskWriter.java:372)
                at org.apache.iceberg.io.PartitionedFanoutWriter.close(PartitionedFanoutWriter.java:70)
                at org.apache.iceberg.io.BaseTaskWriter.complete(BaseTaskWriter.java:100)
                at tech.stackable.nifi.processors.iceberg.PutIceberg.doOnTrigger(PutIceberg.java:277)
                at tech.stackable.nifi.processors.iceberg.AbstractIcebergProcessor.onTrigger(AbstractIcebergProcessor.java:80)
                at org.apache.nifi.processor.AbstractProcessor.onTrigger(AbstractProcessor.java:27)
                at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:292)
                at org.apache.nifi.util.StandardProcessorTestRunner$RunProcessor.call(StandardProcessorTestRunner.java:286)
                at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
                at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
                at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
                at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
                at java.base/java.lang.Thread.run(Thread.java:1583)
         -->
        <iceberg.version>1.8.1</iceberg.version>
        <!-- https://github.com/apache/iceberg/issues/10429 -->
        <hive.version>3.1.3</hive.version>
        <hadoop.version>3.4.1</hadoop.version>
        <!-- This needs to match https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-aws/3.4.1 -->
        <awssdk-bundle.version>2.24.6</awssdk-bundle.version>

        <cyclonedx.version>2.8.0</cyclonedx.version>

        <spotbugs-maven-plugin.version>4.8.6.6</spotbugs-maven-plugin.version>
        <spotbugs.version>4.9.0</spotbugs.version>
        <spotless-maven-plugin.version>2.44.2</spotless-maven-plugin.version>
        <cleanthat.version>2.17</cleanthat.version>
        <error-prone.version>2.27.1</error-prone.version>
        <google-java-format.version>1.19.2</google-java-format.version>
    </properties>

    <modules>
        <module>nifi-iceberg-services-api</module>
        <module>nifi-iceberg-services-api-nar</module>
        <module>nifi-iceberg-services</module>
        <module>nifi-iceberg-services-nar</module>
        <module>nifi-iceberg-processors</module>
        <module>nifi-iceberg-processors-nar</module>
        <module>nifi-iceberg-common</module>
        <module>nifi-iceberg-test-utils</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless-maven-plugin.version}</version>
                <configuration>
                    <java>
                        <cleanthat>
                            <version>${cleanthat.version}</version>
                        </cleanthat>
                        <removeUnusedImports />
                        <formatAnnotations />
                        <googleJavaFormat>
                            <version>${google-java-format.version}</version>
                        </googleJavaFormat>
                    </java>
                    <markdown>
                        <includes>
                            <include>**/*.md</include>
                        </includes>
                        <flexmark />
                    </markdown>
                    <json>
                        <includes>
                            <include>src/**/*.json</include>
                        </includes>
                        <jackson />
                    </json>
                    <!--
                     POM rewriting conflicts with the maven-release-plugin.
                     The release plugin rewrites the POM file in a way that is incompatible with spotless, and they change
                     the contents back and forth to match their respective styles. -->
                    <!--pom>
                      <sortPom>
                        <expandEmptyElements>false</expandEmptyElements>
                      </sortPom>
                    </pom-->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <configuration>
                    <plugins>
                        <plugin>
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>${findsecbugs-plugin.version}</version>
                        </plugin>
                    </plugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>${spotbugs.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <version>${cyclonedx.version}</version>
                <configuration>
                    <projectType>application</projectType>
                    <schemaVersion>1.5</schemaVersion>
                    <skipNotDeployed>false</skipNotDeployed>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>makeAggregateBom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!--
    We need to activate a profile for it to be inherited to the submodules.
    Because of this, we don't pass the profile via `-P nifi-2.4.0`, but via `-D nifi.version=2.4.0`

    See https://maven.apache.org/guides/introduction/introduction-to-profiles.html#Profile_Inheritance

    Please note that we can not use properties in the parent reference...
    So we need to hard-code *some* NiFi version in there...
    -->
    <profiles>
        <profile>
            <id>nifi-2.4.0</id>
            <activation>
                <property>
                    <name>nifi.version</name>
                    <value>2.4.0</value>
                </property>
            </activation>
            <properties>
                <nifi.version>2.4.0</nifi.version>
                <!-- Future dependency version can go in here -->
            </properties>
        </profile>
    </profiles>
</project>
